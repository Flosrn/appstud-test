{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/flo/Documents/Code/react-native/appstud/rn-appstud-test/screens/PlaylistsScreen.tsx\";\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport axios from \"axios\";\nvar API_ENDPOINT = \"http://localhost:3001\";\n\nvar Item = function Item(_ref) {\n  var item = _ref.item,\n      onPress = _ref.onPress,\n      style = _ref.style;\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: [styles.item, style],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, item.title));\n};\n\nexport default function PlaylistsScreen(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      playlists = _React$useState2[0],\n      setPlaylists = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedId = _React$useState4[0],\n      setSelectedId = _React$useState4[1];\n\n  React.useEffect(function () {\n    var fetchData = function fetchData() {\n      var response;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get(API_ENDPOINT + \"/v1/browse/featured-playlists\"));\n\n            case 2:\n              response = _context.sent;\n              setPlaylists(response.data.playlists.items);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  });\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    var backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\n    return React.createElement(Item, {\n      item: item,\n      onPress: function onPress() {\n        setSelectedId(item.id);\n        navigation.navigate(\"Preview\", {\n          id: item.id\n        });\n      },\n      style: {\n        backgroundColor: backgroundColor,\n        backgroundImage: \"url(\" + item.images[0].url + \")\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Editor's picks\"), React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.flatContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: playlists,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    extraData: selectedId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  flatContainer: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\"\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    width: 170,\n    height: 170,\n    backgroundPosition: \"center\",\n    backgroundSize: \"contain\"\n  }\n});","map":{"version":3,"sources":["/Users/flo/Documents/Code/react-native/appstud/rn-appstud-test/screens/PlaylistsScreen.tsx"],"names":["React","axios","API_ENDPOINT","Item","item","onPress","style","styles","title","PlaylistsScreen","navigation","useState","playlists","setPlaylists","selectedId","setSelectedId","useEffect","fetchData","get","response","data","items","renderItem","backgroundColor","id","navigate","backgroundImage","images","url","container","flatContainer","StyleSheet","create","flex","display","flexDirection","fontSize","fontWeight","separator","marginVertical","height","width","padding","marginHorizontal","backgroundPosition","backgroundSize"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  Text,\n  SafeAreaView,\n  FlatList,\n  StyleSheet,\n  Button,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport axios from \"axios\";\nimport { StackScreenProps } from '@react-navigation/stack'\n\nconst API_ENDPOINT = \"http://localhost:3001\";\n\nconst Item = ({ item, onPress, style }) => (\n  <TouchableOpacity onPress={onPress} style={[styles.item, style]}>\n    <Text style={styles.title}>{item.title}</Text>\n  </TouchableOpacity>\n);\n\ntype Props = StackScreenProps<RootStackParamList, 'Playlists'>;\n\nexport default function PlaylistsScreen({ navigation }: Props) {\n  const [playlists, setPlaylists] = React.useState();\n  const [selectedId, setSelectedId] = React.useState(null);\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(\n        `${API_ENDPOINT}/v1/browse/featured-playlists`\n      );\n      setPlaylists(response.data.playlists.items);\n    };\n    fetchData();\n  });\n\n  // console.log(\"playlists : \", playlists);\n\n  const renderItem = ({ item }: any) => {\n    const backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\n    return (\n      <Item\n        item={item}\n        onPress={() => {\n          setSelectedId(item.id);\n          navigation.navigate(\"Preview\", { id: item.id });\n        }}\n        style={{\n          backgroundColor,\n          backgroundImage: `url(${item.images[0].url})`,\n        }}\n      />\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Editor's picks</Text>\n      <SafeAreaView style={styles.container}>\n        <ScrollView style={styles.flatContainer}>\n          <FlatList\n            data={playlists}\n            renderItem={renderItem}\n            keyExtractor={(item) => item.id}\n            extraData={selectedId}\n          />\n        </ScrollView>\n      </SafeAreaView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  flatContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\",\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    width: 170,\n    height: 170,\n    backgroundPosition: \"center\",\n    backgroundSize: \"contain\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}