{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/flo/Documents/Code/react-native/appstud/rn-appstud-test/screens/PlaylistDetailScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport axios from \"axios\";\nimport { Audio } from \"expo-av\";\nvar API_ENDPOINT = \"http://localhost:3001\";\nexport default function PlaylistDetailScreen(_ref) {\n  var _track$artists$;\n\n  var route = _ref.route;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      playlistDetail = _React$useState2[0],\n      setPlaylistDetail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      track = _React$useState4[0],\n      setTrack = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    isPlaying: false,\n    playbackInstance: null,\n    volume: 1.0,\n    isBuffering: false\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      audioState = _React$useState6[0],\n      setAudioState = _React$useState6[1];\n\n  var id = route.params.id;\n  React.useEffect(function () {\n    var fetchData = function fetchData() {\n      var response;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get(API_ENDPOINT + \"/v1/playlists/\" + id));\n\n            case 2:\n              response = _context.sent;\n              setPlaylistDetail(response.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  });\n\n  var onPlaybackStatusUpdate = function onPlaybackStatusUpdate(status) {\n    setAudioState(_objectSpread(_objectSpread({}, audioState), {}, {\n      isBuffering: status.isBuffering\n    }));\n  };\n\n  var loadAudio = function loadAudio(soundUri) {\n    var playbackInstance, source, status;\n    return _regeneratorRuntime.async(function loadAudio$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (soundUri) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            _context2.t0 = audioState == null ? void 0 : audioState.playbackInstance;\n\n            if (!_context2.t0) {\n              _context2.next = 6;\n              break;\n            }\n\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(audioState == null ? void 0 : audioState.playbackInstance.unloadAsync());\n\n          case 6:\n            playbackInstance = new Audio.Sound();\n            console.log(\"playbackInstance : \", playbackInstance);\n            _context2.prev = 8;\n            source = {\n              uri: soundUri\n            };\n            status = {\n              shouldPlay: true,\n              volume: audioState.volume\n            };\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(playbackInstance.loadAsync(source, status, false));\n\n          case 13:\n            setAudioState(_objectSpread(_objectSpread({}, audioState), {}, {\n              playbackInstance: playbackInstance,\n              isPlaying: true\n            }));\n            _context2.next = 19;\n            break;\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t1 = _context2[\"catch\"](8);\n            console.log(_context2.t1);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[8, 16]], Promise);\n  };\n\n  var handlePlayPause = function handlePlayPause() {\n    var _audioState$playbackI, _audioState$playbackI2;\n\n    return _regeneratorRuntime.async(function handlePlayPause$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(\"audioState : \", audioState);\n\n            if (!(audioState == null ? void 0 : audioState.playbackInstance)) {\n              _context3.next = 10;\n              break;\n            }\n\n            setAudioState(_objectSpread(_objectSpread({}, audioState), {}, {\n              isPlaying: !audioState.isPlaying\n            }));\n\n            if (!audioState.isPlaying) {\n              _context3.next = 8;\n              break;\n            }\n\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(audioState == null ? void 0 : (_audioState$playbackI = audioState.playbackInstance) == null ? void 0 : _audioState$playbackI.pauseAsync());\n\n          case 6:\n            _context3.next = 10;\n            break;\n\n          case 8:\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(audioState == null ? void 0 : (_audioState$playbackI2 = audioState.playbackInstance) == null ? void 0 : _audioState$playbackI2.playAsync());\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, playlistDetail && React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: playlistDetail.images[0].url\n    },\n    style: {\n      width: 85,\n      height: 85\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      paddingLeft: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, playlistDetail.name), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, playlistDetail.description))), React.createElement(ScrollView, {\n    style: styles.body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, playlistDetail.tracks.items.map(function (item) {\n    var _item$track, _item$track$artists$;\n\n    return React.createElement(TouchableOpacity, {\n      key: item.track.id,\n      onPress: function onPress() {\n        setTrack(item.track);\n        loadAudio(item.track.preview_url);\n      },\n      style: styles.track,\n      disabled: !item.track.preview_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {\n        opacity: item.track.preview_url ? 1 : 0.3\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, item.track.name), React.createElement(Text, {\n      style: {\n        opacity: item.track.preview_url ? 1 : 0.3,\n        fontSize: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, (_item$track = item.track) == null ? void 0 : (_item$track$artists$ = _item$track.artists[0]) == null ? void 0 : _item$track$artists$.name));\n  }))), track && React.createElement(View, {\n    style: styles.footer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.player,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.playerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, track == null ? void 0 : track.name), React.createElement(Text, {\n    style: styles.playerAuthor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, track == null ? void 0 : (_track$artists$ = track.artists[0]) == null ? void 0 : _track$artists$.name)), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.buttonPlayPause,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: audioState.isPlaying ? \"I I\" : \"▶️\",\n    color: \"#1DB954\",\n    onPress: handlePlayPause,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#191414\"\n  },\n  header: {\n    height: \"20vh\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingLeft: 20,\n    backgroundColor: \"#1DB954\"\n  },\n  title: {\n    color: \"#fff\",\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  description: {\n    color: \"#fff\",\n    fontSize: 12\n  },\n  body: {\n    height: \"70vh\",\n    overflow: \"hidden\",\n    paddingLeft: 20,\n    backgroundColor: \"#191414\"\n  },\n  track: {\n    marginTop: 5,\n    marginBottom: 5\n  },\n  footer: {\n    width: \"100%\",\n    height: 50,\n    backgroundColor: \"#191414\",\n    position: \"absolute\",\n    bottom: 0,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderColor: \"#1DB954\",\n    borderTopWidth: 1\n  },\n  player: {\n    paddingLeft: 20\n  },\n  playerText: {\n    color: \"#fff\"\n  },\n  playerAuthor: {\n    color: \"#fff\",\n    fontSize: 10,\n    opacity: 0.7\n  },\n  buttonPlayPause: {\n    width: 50,\n    marginRight: 20,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/flo/Documents/Code/react-native/appstud/rn-appstud-test/screens/PlaylistDetailScreen.tsx"],"names":["React","axios","Audio","API_ENDPOINT","PlaylistDetailScreen","route","useState","playlistDetail","setPlaylistDetail","track","setTrack","isPlaying","playbackInstance","volume","isBuffering","audioState","setAudioState","id","params","useEffect","fetchData","get","response","data","onPlaybackStatusUpdate","status","loadAudio","soundUri","unloadAsync","Sound","console","log","source","uri","shouldPlay","loadAsync","handlePlayPause","pauseAsync","playAsync","styles","container","header","images","url","width","height","paddingLeft","title","name","description","body","tracks","items","map","item","preview_url","opacity","fontSize","artists","footer","player","playerText","playerAuthor","buttonPlayPause","StyleSheet","create","flex","backgroundColor","display","flexDirection","alignItems","color","fontWeight","overflow","marginTop","marginBottom","position","bottom","justifyContent","borderColor","borderTopWidth","marginRight"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  ScrollView,\n  Text,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  Button,\n} from \"react-native\";\nimport axios from \"axios\";\nimport { StackScreenProps } from \"@react-navigation/stack\";\nimport { PlaylistDetail, Item, Track } from \"../models/PlaylistDetail\";\nimport { Audio } from \"expo-av\";\n\nconst API_ENDPOINT = \"http://localhost:3001\";\n\ntype RootStackParamList = {\n  PlaylistDetail: { id: string };\n};\n\ntype AudioState = {\n  isPlaying: boolean;\n  playbackInstance: any;\n  volume: number;\n  isBuffering: boolean;\n};\n\ntype Props = StackScreenProps<RootStackParamList, \"PlaylistDetail\">;\n\nexport default function PlaylistDetailScreen({ route }: Props) {\n  const [playlistDetail, setPlaylistDetail] = React.useState<PlaylistDetail>();\n  const [track, setTrack] = React.useState<Track>();\n  const [audioState, setAudioState] = React.useState<AudioState>({\n    isPlaying: false,\n    playbackInstance: null,\n    volume: 1.0,\n    isBuffering: false,\n  });\n  const { id } = route.params;\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${API_ENDPOINT}/v1/playlists/${id}`);\n      setPlaylistDetail(response.data);\n    };\n    fetchData();\n  });\n\n  const onPlaybackStatusUpdate = (status: any) => {\n    // console.log(\"status : \", status);\n    setAudioState({\n      ...audioState,\n      isBuffering: status.isBuffering,\n    });\n  };\n\n  const loadAudio = async (soundUri: string) => {\n    if (!soundUri) return;\n\n    audioState?.playbackInstance &&\n      (await audioState?.playbackInstance.unloadAsync());\n\n    const playbackInstance = new Audio.Sound();\n    console.log(\"playbackInstance : \", playbackInstance);\n    // const status = await playbackInstance.getStatusAsync();\n\n    try {\n      const source = {\n        uri: soundUri,\n      };\n\n      const status = {\n        shouldPlay: true,\n        volume: audioState.volume,\n      };\n\n      // playbackInstance.setOnPlaybackStatusUpdate(onPlaybackStatusUpdate);\n      await playbackInstance.loadAsync(source, status, false);\n      setAudioState({ ...audioState, playbackInstance, isPlaying: true });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handlePlayPause = async () => {\n    console.log(\"audioState : \", audioState);\n    if (audioState?.playbackInstance) {\n      setAudioState({\n        ...audioState,\n        isPlaying: !audioState.isPlaying,\n      });\n      audioState.isPlaying\n        ? await audioState?.playbackInstance?.pauseAsync()\n        : await audioState?.playbackInstance?.playAsync();\n    }\n  };\n\n  // React.useEffect(() => {\n  //   const playPause = async () => {\n  //     console.log(\"audioState : \", audioState);\n  //     return audioState?.isPlaying\n  //       ? await audioState?.playbackInstance?.pauseAsync()\n  //       : await audioState?.playbackInstance?.playAsync();\n  //   };\n  //   audioState?.isPlaying && playPause();\n  // }, [audioState?.isPlaying]);\n\n  return (\n    <View style={styles.container}>\n      {playlistDetail && (\n        <View>\n          <View style={styles.header}>\n            <Image\n              source={{ uri: playlistDetail.images[0].url }}\n              style={{ width: 85, height: 85 }}\n            />\n            <View style={{ paddingLeft: 5 }}>\n              <Text style={styles.title}>{playlistDetail.name}</Text>\n              <Text style={styles.description}>\n                {playlistDetail.description}\n              </Text>\n            </View>\n          </View>\n          <ScrollView style={styles.body}>\n            {playlistDetail.tracks.items.map((item: Item) => (\n              <TouchableOpacity\n                key={item.track.id}\n                onPress={() => {\n                  setTrack(item.track);\n                  loadAudio(item.track.preview_url);\n                }}\n                style={styles.track}\n                disabled={!item.track.preview_url}\n              >\n                <Text\n                  style={{\n                    opacity: item.track.preview_url ? 1 : 0.3,\n                  }}\n                >\n                  {item.track.name}\n                </Text>\n                <Text\n                  style={{\n                    opacity: item.track.preview_url ? 1 : 0.3,\n                    fontSize: 10,\n                  }}\n                >\n                  {item.track?.artists[0]?.name}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        </View>\n      )}\n      {track && (\n        <View style={styles.footer}>\n          <View style={styles.player}>\n            <Text style={styles.playerText}>{track?.name}</Text>\n            <Text style={styles.playerAuthor}>{track?.artists[0]?.name}</Text>\n          </View>\n          <View>\n            <View style={styles.buttonPlayPause}>\n              <Button\n                title={audioState.isPlaying ? \"I I\" : \"▶️\"}\n                color=\"#1DB954\"\n                onPress={handlePlayPause}\n              />\n            </View>\n          </View>\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#191414\",\n  },\n  header: {\n    height: \"20vh\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingLeft: 20,\n    backgroundColor: \"#1DB954\",\n  },\n  title: {\n    color: \"#fff\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  description: {\n    color: \"#fff\",\n    fontSize: 12,\n  },\n  body: {\n    height: \"70vh\",\n    overflow: \"hidden\",\n    paddingLeft: 20,\n    backgroundColor: \"#191414\",\n  },\n  track: {\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  footer: {\n    width: \"100%\",\n    height: 50,\n    backgroundColor: \"#191414\",\n    position: \"absolute\",\n    bottom: 0,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderColor: \"#1DB954\",\n    borderTopWidth: 1,\n  },\n  player: {\n    paddingLeft: 20,\n  },\n  playerText: {\n    color: \"#fff\",\n  },\n  playerAuthor: {\n    color: \"#fff\",\n    fontSize: 10,\n    opacity: 0.7,\n  },\n  buttonPlayPause: {\n    width: 50,\n    marginRight: 20,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}