{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/flo/Documents/Code/react-native/appstud/rn-appstud-test/screens/PlaylistDetailScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport axios from \"axios\";\nimport { Audio } from \"expo-av\";\nvar API_ENDPOINT = \"http://localhost:3001\";\nexport default function PlaylistDetailScreen(_ref) {\n  var _track$artists$;\n\n  var route = _ref.route;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      playlistDetail = _React$useState2[0],\n      setPlaylistDetail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      track = _React$useState4[0],\n      setTrack = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    isPlaying: false,\n    playbackInstance: null,\n    currentIndex: 0,\n    volume: 1.0,\n    isBuffering: false\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      audioState = _React$useState6[0],\n      setAudioState = _React$useState6[1];\n\n  var id = route.params.id;\n  React.useEffect(function () {\n    var fetchData = function fetchData() {\n      var response;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get(API_ENDPOINT + \"/v1/playlists/\" + id));\n\n            case 2:\n              response = _context.sent;\n              setPlaylistDetail(response.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  });\n\n  var onPlaybackStatusUpdate = function onPlaybackStatusUpdate(status) {\n    setAudioState(_objectSpread(_objectSpread({}, audioState), {}, {\n      isBuffering: status.isBuffering\n    }));\n  };\n\n  var loadAudio = function loadAudio(soundUri) {\n    var playbackInstance, status, source, _status;\n\n    return _regeneratorRuntime.async(function loadAudio$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (soundUri) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            playbackInstance = new Audio.Sound();\n            console.log(\"playbackInstance : \", playbackInstance);\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(playbackInstance.getStatusAsync());\n\n          case 6:\n            status = _context2.sent;\n            console.log(\"status : \", status);\n            _context2.prev = 8;\n            source = {\n              uri: soundUri\n            };\n            _status = {\n              shouldPlay: true,\n              volume: audioState.volume\n            };\n            playbackInstance.setOnPlaybackStatusUpdate(onPlaybackStatusUpdate);\n            _context2.next = 14;\n            return _regeneratorRuntime.awrap(playbackInstance.loadAsync(source, _status, false));\n\n          case 14:\n            setAudioState(_objectSpread(_objectSpread({}, audioState), {}, {\n              playbackInstance: playbackInstance,\n              isPlaying: true\n            }));\n            _context2.next = 20;\n            break;\n\n          case 17:\n            _context2.prev = 17;\n            _context2.t0 = _context2[\"catch\"](8);\n            console.log(_context2.t0);\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[8, 17]], Promise);\n  };\n\n  var handlePlayPause = function handlePlayPause() {\n    return _regeneratorRuntime.async(function handlePlayPause$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setAudioState(_objectSpread(_objectSpread({}, audioState), {}, {\n              isPlaying: !audioState.isPlaying\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, playlistDetail && React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: playlistDetail.images[0].url\n    },\n    style: {\n      width: 85,\n      height: 85\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, playlistDetail.name), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, playlistDetail.description)), React.createElement(ScrollView, {\n    style: styles.body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, playlistDetail.tracks.items.map(function (item) {\n    return React.createElement(TouchableOpacity, {\n      key: item.track.id,\n      onPress: function onPress() {\n        setTrack(item.track);\n        loadAudio(item.track.preview_url);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: item.track.preview_url ? \"#000\" : \"grey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, item.track.name));\n  }))), track && React.createElement(View, {\n    style: styles.footer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.player,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.playerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, track == null ? void 0 : track.name), React.createElement(Text, {\n    style: styles.playerAuthor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, track == null ? void 0 : (_track$artists$ = track.artists[0]) == null ? void 0 : _track$artists$.name)), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"TEST\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    height: \"20vh\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  description: {\n    fontSize: 12\n  },\n  body: {\n    height: \"70vh\",\n    overflow: \"hidden\"\n  },\n  footer: {\n    width: \"100%\",\n    height: 50,\n    backgroundColor: \"#000\",\n    position: \"absolute\",\n    bottom: 0,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItem: \"space-around\",\n    justifyContent: \"space-around\"\n  },\n  player: {\n    paddingLeft: 20\n  },\n  playerText: {\n    color: \"#fff\"\n  },\n  playerAuthor: {\n    color: \"#fff\",\n    fontSize: 10,\n    opacity: 0.7\n  }\n});","map":{"version":3,"sources":["/Users/flo/Documents/Code/react-native/appstud/rn-appstud-test/screens/PlaylistDetailScreen.tsx"],"names":["React","axios","Audio","API_ENDPOINT","PlaylistDetailScreen","route","useState","playlistDetail","setPlaylistDetail","track","setTrack","isPlaying","playbackInstance","currentIndex","volume","isBuffering","audioState","setAudioState","id","params","useEffect","fetchData","get","response","data","onPlaybackStatusUpdate","status","loadAudio","soundUri","Sound","console","log","getStatusAsync","source","uri","shouldPlay","setOnPlaybackStatusUpdate","loadAsync","handlePlayPause","styles","container","header","images","url","width","height","title","name","description","body","tracks","items","map","item","preview_url","color","footer","player","playerText","playerAuthor","artists","StyleSheet","create","flex","fontSize","fontWeight","overflow","backgroundColor","position","bottom","display","flexDirection","alignItem","justifyContent","paddingLeft","opacity"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  ScrollView,\n  Text,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  Button,\n} from \"react-native\";\nimport axios from \"axios\";\nimport { StackScreenProps } from \"@react-navigation/stack\";\nimport { PlaylistDetail, Item, Track } from \"../models/PlaylistDetail\";\nimport { Audio } from \"expo-av\";\n\nconst API_ENDPOINT = \"http://localhost:3001\";\n\ntype RootStackParamList = {\n  PlaylistDetail: { id: string };\n};\n\ntype Props = StackScreenProps<RootStackParamList, \"PlaylistDetail\">;\n\nexport default function PlaylistDetailScreen({ route }: Props) {\n  const [playlistDetail, setPlaylistDetail] = React.useState<PlaylistDetail>();\n  const [track, setTrack] = React.useState<Track>();\n  const [audioState, setAudioState] = React.useState({\n    isPlaying: false,\n    playbackInstance: null,\n    currentIndex: 0,\n    volume: 1.0,\n    isBuffering: false,\n  });\n  const { id } = route.params;\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(`${API_ENDPOINT}/v1/playlists/${id}`);\n      setPlaylistDetail(response.data);\n    };\n    fetchData();\n  });\n\n  const onPlaybackStatusUpdate = (status: any) => {\n    // console.log(\"status : \", status);\n    setAudioState({\n      ...audioState,\n      isBuffering: status.isBuffering,\n    });\n  };\n\n  const loadAudio = async (soundUri: string) => {\n    if (!soundUri) return;\n\n    const playbackInstance = new Audio.Sound();\n    console.log(\"playbackInstance : \", playbackInstance);\n    const status = await playbackInstance.getStatusAsync();\n    console.log(\"status : \", status);\n\n    try {\n      const source = {\n        uri: soundUri,\n      };\n\n      const status = {\n        shouldPlay: true,\n        volume: audioState.volume,\n      };\n\n      playbackInstance.setOnPlaybackStatusUpdate(onPlaybackStatusUpdate);\n      await playbackInstance.loadAsync(source, status, false);\n      setAudioState({ ...audioState, playbackInstance, isPlaying: true });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handlePlayPause = async () => {\n    setAudioState({\n      ...audioState,\n      isPlaying: !audioState.isPlaying,\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      {playlistDetail && (\n        <View>\n          <View style={styles.header}>\n            <Image\n              source={{ uri: playlistDetail.images[0].url }}\n              style={{ width: 85, height: 85 }}\n            />\n            <Text style={styles.title}>{playlistDetail.name}</Text>\n            <Text style={styles.description}>{playlistDetail.description}</Text>\n          </View>\n          <ScrollView style={styles.body}>\n            {playlistDetail.tracks.items.map((item: Item) => (\n              <TouchableOpacity\n                key={item.track.id}\n                onPress={() => {\n                  setTrack(item.track);\n                  loadAudio(item.track.preview_url);\n                }}\n              >\n                <Text\n                  style={{ color: item.track.preview_url ? \"#000\" : \"grey\" }}\n                >\n                  {item.track.name}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        </View>\n      )}\n      {track && (\n        <View style={styles.footer}>\n          <View style={styles.player}>\n            <Text style={styles.playerText}>{track?.name}</Text>\n            <Text style={styles.playerAuthor}>{track?.artists[0]?.name}</Text>\n          </View>\n          <View>\n            <View>\n              <Button>TEST</Button>\n            </View>\n          </View>\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // justifyContent: \"center\",\n    // alignItem: \"flex-start\",\n  },\n  header: {\n    height: \"20vh\",\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  description: {\n    fontSize: 12,\n  },\n  body: {\n    height: \"70vh\",\n    overflow: \"hidden\",\n  },\n  footer: {\n    width: \"100%\",\n    height: 50,\n    backgroundColor: \"#000\",\n    position: \"absolute\",\n    bottom: 0,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItem: \"space-around\",\n    justifyContent: \"space-around\",\n  },\n  player: {\n    paddingLeft: 20,\n  },\n  playerText: {\n    color: \"#fff\",\n  },\n  playerAuthor: {\n    color: \"#fff\",\n    fontSize: 10,\n    opacity: 0.7,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}